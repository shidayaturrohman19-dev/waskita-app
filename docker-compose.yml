services:
  # PostgreSQL Database
  db:
    image: postgres:[version]
    container_name: [container_name]
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-[database_name]}
      POSTGRES_USER: ${POSTGRES_USER:-[username]}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-[password]}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT:-[port]}:[port]"
    networks:
      - waskita_network
    restart: unless-stopped
    # Security improvements
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
      - /var/run/postgresql

  # Redis for caching
  redis:
    image: redis:[version]-alpine
    container_name: [container_name]
    ports:
      - "${REDIS_PORT:-[port]}:[port]"
    networks:
      - waskita_network
    restart: unless-stopped
    # Security improvements
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp

  # Waskita Application
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: [container_name]
    env_file:
      - .env.docker
    environment:
      - FLASK_ENV=${FLASK_ENV:-production}
      - FLASK_DEBUG=${FLASK_DEBUG:-0}
      - DATABASE_URL=postgresql://${POSTGRES_USER:-[username]}:${POSTGRES_PASSWORD:-[password]}@db:[port]/${POSTGRES_DB:-[database_name]}
      - SECRET_KEY=${SECRET_KEY:-[your-secret-key-change-this]}
      - REDIS_URL=redis://redis:[port]/[db_number]
      - CREATE_SAMPLE_DATA=${CREATE_SAMPLE_DATA:-false}
      # Model paths for container
      - WORD2VEC_MODEL_PATH=/app/models/embeddings/wiki_word2vec_csv_updated.model
      - NAIVE_BAYES_MODEL1_PATH=/app/models/navesbayes/naive_bayes_model1.pkl
      - NAIVE_BAYES_MODEL2_PATH=/app/models/navesbayes/naive_bayes_model2.pkl
      - NAIVE_BAYES_MODEL3_PATH=/app/models/navesbayes/naive_bayes_model3.pkl
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
      - ./static/uploads:/app/static/uploads
    ports:
      - "${WEB_PORT:-[port]}:[port]"
    depends_on:
      - db
      - redis
    # Initialize admin user on first run
    command: >
      sh -c "python /app/create_admin.py && python app.py"
    networks:
      - waskita_network
    restart: unless-stopped
    # Security improvements
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:[port]/"]
      interval: [X]s
      timeout: [X]s
      retries: [X]
      start_period: [X]s

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: [container_name]
    ports:
      - "${NGINX_HTTP_PORT:-[port]}:[port]"
      - "${NGINX_HTTPS_PORT:-[port]}:[port]"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./static:/var/www/static
      - ./ssl:/etc/nginx/ssl  # For SSL certificates
    depends_on:
      - web
    networks:
      - waskita_network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  waskita_network:
    driver: bridge